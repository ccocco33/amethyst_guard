plugins {
    id 'fabric-loom' version '1.6.12'
    id 'maven-publish'
}

group = 'com.ameguard'
version = '1.0.0'

repositories {
    maven { url = 'https://maven.fabricmc.net/' }
    mavenCentral()

    // Mod Menu
    maven { url = 'https://maven.terraformersmc.com/releases/' }
    // YACL
    maven { url = 'https://maven.isxander.dev/releases' }
}

dependencies {
    // --- Core ---
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings "net.fabricmc:yarn:${yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_api_version}"

    // --- UI (개발 전용: 컴파일은 필요, 배포물엔 제외) ---
    // 컴파일만: 우리 client 코드(ModMenuIntegration.java)가 API에 접근 가능
    modCompileOnly "com.terraformersmc:modmenu:${modmenu_version}"
    modCompileOnly "dev.isxander:yet-another-config-lib:${yacl_version}"

    // 로컬 런타임 전용: runClient에서만 실제 모드로 로드됨 (배포 JAR엔 포함 안 됨)
    modLocalRuntime "com.terraformersmc:modmenu:${modmenu_version}"
    modLocalRuntime "dev.isxander:yet-another-config-lib:${yacl_version}"
}

loom {
    // client/server 소스셋 분리: client 전용 코드는 src/client/java 아래에 둠
    splitEnvironmentSourceSets()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
    withSourcesJar()
}

tasks.withType(JavaCompile).configureEach {
    options.release = 17
}

processResources {
    inputs.property "version", project.version
    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        mavenLocal()
    }
}
